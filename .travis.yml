language: python
os:
  - linux
  - osx
python:
  # We don't actually use the Travis Python, but this keeps it organized.
  - "2.7"
  - "3.6"
before_install:
  - sudo apt-get update
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      if [[ "$PYTHON_VERSION" == "2.7" ]]; then
        curl https://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -o miniconda.sh;
      else
        curl https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -o miniconda.sh;
      fi
    else
      if [[ "$PYTHON_VERSION" == "2.7" ]]; then
        wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  
  # Useful for debugging any issues with conda
  - conda info -a

  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy
  - source activate test-environment
  - conda install -c conda-forge pyside
  - conda install -c conda-forge pyinstaller
install:
  # Install SHARPpy 
  - python setup.py install
  # Run pyinstaller to generate the Python program
  - if ["$TRAVIS_OS_NAME" == "osx"]; then 
      pyinstaller runsharp/SHARPpy-osx.spec --onefile --noconsole;
    elif ["$TRAVIS_OS_NAME" == "linux2"]; then
      pyinstaller runsharp/SHARPpy-linux-redhat5.spec;      
    fi
script:
  # Here is where we run some test scripts
  - python sharppy/tests/test_url.py https://www.spc.noaa.gov/exper/soundings/18112100_OBS/OUN.txt 
deploy:
  provider: releases
  skip_cleanup: true
  api_key: "GITHUB OAUTH TOKEN"
  file: dist/SHARPpy.app
  on:
    tags: true
